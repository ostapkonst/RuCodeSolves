#include <iostream>
#include <cmath>
using namespace std;

bool intersect (int a, int b, int c, int d) {
	if (a > b)  swap (a, b);
	if (c > d)  swap (c, d);
	return max(a,c) <= min(b,d);
}

int main() {
	double ax1, ay1, ax2, ay2, bx1, by1, bx2, by2;
	cin >> ax1 >> ay1 >> ax2 >> ay2 >> bx1 >> by1 >> bx2 >> by2;

	double v1=(bx2-bx1)*(ay1-by1)-(by2-by1)*(ax1-bx1);
	double v2=(bx2-bx1)*(ay2-by1)-(by2-by1)*(ax2-bx1);
	double v3=(ax2-ax1)*(by1-ay1)-(ay2-ay1)*(bx1-ax1);
	double v4=(ax2-ax1)*(by2-ay1)-(ay2-ay1)*(bx2-ax1);

	cout << ((v1*v2<=0) && (v3*v4<=0) && intersect(ax1, ax2, bx1, bx2) && intersect(ay1, ay2, by1, by2) ? "YES" : "NO");

	return 0;
}